stages:
  - tests
  - convert
  - build
  - csim
  - csynth

.pytest:
  stage: tests
  image: gitlab-registry.cern.ch/fastmachinelearning/hls4ml-testing:0.1.base
  tags: 
    - docker
  before_script:
    - source ~/.bashrc
    - git submodule init
    - git submodule update
    - conda activate hls4ml-testing
    - pip install .[profiling]
  script:
    - cd ${CI_PROJECT_DIR}/test/pytest
    - pytest -rA $TEST --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: 
        - test/pytest/report.xml
    expire_in: 1 week
  allow_failure: true

pytest test_qkeras:
  extends: .pytest
  variables:
    TEST: test_qkeras.py

pytest test_cnn_mnist:
  extends: .pytest
  variables:
    TEST: test_cnn_mnist.py

pytest test_softmax:
  extends: .pytest
  variables:
    TEST: test_softmax.py

convert:
  stage: convert
  image: gitlab-registry.cern.ch/fastmachinelearning/hls4ml-testing:0.1.base
  tags: 
    - docker
  before_script:
    - source ~/.bashrc
    - git submodule init
    - git submodule update
    - conda activate hls4ml-testing
    - pip install .[profiling]
  script:
    - cd ${CI_PROJECT_DIR}/test
    - ./convert-keras-models.sh -x -y -f keras-models.txt
  artifacts:
    paths:
    - test/vivado_prj/
    - test/convert-keras-models-ci.yml
    expire_in: 2 days

#csim:
#  stage: csim
#  image: gitlab-registry.cern.ch/fastmachinelearning/hls4ml-testing:0.1.vivado
#  tags: 
#    - hls4ml
#  before_script:
#    - source ~/.bashrc
#  script:
#    - cd ${CI_PROJECT_DIR}/test
#    - ./build-prj.sh -v 2019.2 -c -p 6
#  artifacts:
#    paths:
#    - test/vivado_prj/
#    expire_in: 2 days

#csynth:
#  stage: csynth
#  image: gitlab-registry.cern.ch/fastmachinelearning/hls4ml-testing:0.1.vivado
#  tags: 
#    - hls4ml
#  before_script:
#    - source ~/.bashrc
#  script:
#    - cd ${CI_PROJECT_DIR}/test
#    - ./build-prj.sh -v 2019.2 -s -r -p 6
#  artifacts:
#    paths:
#    - test/vivado_prj/
#    expire_in: 2 days

.build_prj:
  image: gitlab-registry.cern.ch/fastmachinelearning/hls4ml-testing:0.1.vivado
  tags: 
    - hls4ml
  before_script:
    - source ~/.bashrc
  script:
    - cd ${CI_PROJECT_DIR}/test/vivado_prj/
    - mkdir -p "${HLS4ML_PRJ}" && tar -xzf "${HLS$ML_PRJ}.tar.gz" -C "${HLS$ML_PRJ}"
    - cd ${HLS4ML_PRJ}
    - vivado_hls -f build_prj ${BUILD_PRJ_OPTS}
  artifacts:
    paths:
    - test/vivado_prj/${HLS4ML_PRJ_DIR}/vivado_hls.log

.csim:
  extends: .build_prj
  stage: csim
  variables:
    BUILD_PRJ_OPTS: "reset=1 csim=1 synth=0 cosim=0 validation=0 vsynth=0 export=0"
  artifacts:
    paths:
    - test/vivado_prj/${HLS4ML_PRJ}.tar.gz
    expire_in: 2 days

.csynth:
  extends: .build_prj
  stage: csynth
  variables:
    BUILD_PRJ_OPTS: "reset=1 csim=0 synth=1 cosim=0 validation=0 vsynth=0 export=0"
  artifacts:
    paths:
    - test/vivado_prj/${HLS4ML_PRJ_DIR}/myproject_prj/solution1/synth/report/myproject_prj.rpt
    - test/vivado_prj/${HLS4ML_PRJ_DIR}/myproject_prj/solution1/synth/report/myproject_prj.xml

#csim:KERAS_1layer:
#  extends: .csim
#  variables:
#    HLS4ML_PRJ_DIR: KERAS_1layer

#csim:KERAS_3layer:
#  extends: .csim
#  variables:
#    HLS4ML_PRJ_DIR: KERAS_3layer

#csynth:KERAS_1layer:
#  extends: .csynth
#  variables:
#    HLS4ML_PRJ_DIR: KERAS_3layer

#csynth:KERAS_3layer:
#  extends: .csynth
#  variables:
#    HLS4ML_PRJ_DIR: KERAS_3layer

builds:
  stage: build
  needs: 
  - convert
  trigger:
    include:
      - job: convert
        artifact: test/convert-keras-models-ci.yml
    strategy: depend

