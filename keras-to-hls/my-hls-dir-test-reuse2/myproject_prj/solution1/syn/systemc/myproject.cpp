// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "myproject.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic myproject::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic myproject::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> myproject::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<2> myproject::ap_ST_fsm_pp0_stage1 = "10";
const sc_lv<32> myproject::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> myproject::ap_const_lv1_1 = "1";
const sc_lv<32> myproject::ap_const_lv32_1 = "1";
const sc_lv<16> myproject::ap_const_lv16_A = "1010";
const sc_lv<16> myproject::ap_const_lv16_1 = "1";

myproject::myproject(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_compute_layer_0_0_0_s_fu_143 = new compute_layer_0_0_0_s("grp_compute_layer_0_0_0_s_fu_143");
    grp_compute_layer_0_0_0_s_fu_143->ap_clk(ap_clk);
    grp_compute_layer_0_0_0_s_fu_143->ap_rst(ap_rst);
    grp_compute_layer_0_0_0_s_fu_143->ap_start(grp_compute_layer_0_0_0_s_fu_143_ap_start);
    grp_compute_layer_0_0_0_s_fu_143->ap_done(grp_compute_layer_0_0_0_s_fu_143_ap_done);
    grp_compute_layer_0_0_0_s_fu_143->ap_idle(grp_compute_layer_0_0_0_s_fu_143_ap_idle);
    grp_compute_layer_0_0_0_s_fu_143->ap_ready(grp_compute_layer_0_0_0_s_fu_143_ap_ready);
    grp_compute_layer_0_0_0_s_fu_143->data_0_V_read(data_0_V);
    grp_compute_layer_0_0_0_s_fu_143->data_1_V_read(data_1_V);
    grp_compute_layer_0_0_0_s_fu_143->data_2_V_read(data_2_V);
    grp_compute_layer_0_0_0_s_fu_143->data_3_V_read(data_3_V);
    grp_compute_layer_0_0_0_s_fu_143->data_4_V_read(data_4_V);
    grp_compute_layer_0_0_0_s_fu_143->data_5_V_read(data_5_V);
    grp_compute_layer_0_0_0_s_fu_143->data_6_V_read(data_6_V);
    grp_compute_layer_0_0_0_s_fu_143->data_7_V_read(data_7_V);
    grp_compute_layer_0_0_0_s_fu_143->data_8_V_read(data_8_V);
    grp_compute_layer_0_0_0_s_fu_143->data_9_V_read(data_9_V);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_0(grp_compute_layer_0_0_0_s_fu_143_ap_return_0);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_1(grp_compute_layer_0_0_0_s_fu_143_ap_return_1);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_2(grp_compute_layer_0_0_0_s_fu_143_ap_return_2);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_3(grp_compute_layer_0_0_0_s_fu_143_ap_return_3);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_4(grp_compute_layer_0_0_0_s_fu_143_ap_return_4);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_5(grp_compute_layer_0_0_0_s_fu_143_ap_return_5);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_6(grp_compute_layer_0_0_0_s_fu_143_ap_return_6);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_7(grp_compute_layer_0_0_0_s_fu_143_ap_return_7);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_8(grp_compute_layer_0_0_0_s_fu_143_ap_return_8);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_9(grp_compute_layer_0_0_0_s_fu_143_ap_return_9);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_10(grp_compute_layer_0_0_0_s_fu_143_ap_return_10);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_11(grp_compute_layer_0_0_0_s_fu_143_ap_return_11);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_12(grp_compute_layer_0_0_0_s_fu_143_ap_return_12);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_13(grp_compute_layer_0_0_0_s_fu_143_ap_return_13);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_14(grp_compute_layer_0_0_0_s_fu_143_ap_return_14);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_15(grp_compute_layer_0_0_0_s_fu_143_ap_return_15);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_16(grp_compute_layer_0_0_0_s_fu_143_ap_return_16);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_17(grp_compute_layer_0_0_0_s_fu_143_ap_return_17);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_18(grp_compute_layer_0_0_0_s_fu_143_ap_return_18);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_19(grp_compute_layer_0_0_0_s_fu_143_ap_return_19);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_20(grp_compute_layer_0_0_0_s_fu_143_ap_return_20);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_21(grp_compute_layer_0_0_0_s_fu_143_ap_return_21);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_22(grp_compute_layer_0_0_0_s_fu_143_ap_return_22);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_23(grp_compute_layer_0_0_0_s_fu_143_ap_return_23);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_24(grp_compute_layer_0_0_0_s_fu_143_ap_return_24);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_25(grp_compute_layer_0_0_0_s_fu_143_ap_return_25);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_26(grp_compute_layer_0_0_0_s_fu_143_ap_return_26);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_27(grp_compute_layer_0_0_0_s_fu_143_ap_return_27);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_28(grp_compute_layer_0_0_0_s_fu_143_ap_return_28);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_29(grp_compute_layer_0_0_0_s_fu_143_ap_return_29);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_30(grp_compute_layer_0_0_0_s_fu_143_ap_return_30);
    grp_compute_layer_0_0_0_s_fu_143->ap_return_31(grp_compute_layer_0_0_0_s_fu_143_ap_return_31);
    grp_compute_layer_0_0_0_1_fu_167 = new compute_layer_0_0_0_1("grp_compute_layer_0_0_0_1_fu_167");
    grp_compute_layer_0_0_0_1_fu_167->ap_clk(ap_clk);
    grp_compute_layer_0_0_0_1_fu_167->ap_rst(ap_rst);
    grp_compute_layer_0_0_0_1_fu_167->ap_start(grp_compute_layer_0_0_0_1_fu_167_ap_start);
    grp_compute_layer_0_0_0_1_fu_167->ap_done(grp_compute_layer_0_0_0_1_fu_167_ap_done);
    grp_compute_layer_0_0_0_1_fu_167->ap_idle(grp_compute_layer_0_0_0_1_fu_167_ap_idle);
    grp_compute_layer_0_0_0_1_fu_167->ap_ready(grp_compute_layer_0_0_0_1_fu_167_ap_ready);
    grp_compute_layer_0_0_0_1_fu_167->data_0_V_read(layer1_out_0_V_reg_677);
    grp_compute_layer_0_0_0_1_fu_167->data_1_V_read(layer1_out_1_V_reg_682);
    grp_compute_layer_0_0_0_1_fu_167->data_2_V_read(layer1_out_2_V_reg_687);
    grp_compute_layer_0_0_0_1_fu_167->data_3_V_read(layer1_out_3_V_reg_692);
    grp_compute_layer_0_0_0_1_fu_167->data_4_V_read(layer1_out_4_V_reg_697);
    grp_compute_layer_0_0_0_1_fu_167->data_5_V_read(layer1_out_5_V_reg_702);
    grp_compute_layer_0_0_0_1_fu_167->data_6_V_read(layer1_out_6_V_reg_707);
    grp_compute_layer_0_0_0_1_fu_167->data_7_V_read(layer1_out_7_V_reg_712);
    grp_compute_layer_0_0_0_1_fu_167->data_8_V_read(layer1_out_8_V_reg_717);
    grp_compute_layer_0_0_0_1_fu_167->data_9_V_read(layer1_out_9_V_reg_722);
    grp_compute_layer_0_0_0_1_fu_167->data_10_V_read(layer1_out_10_V_reg_727);
    grp_compute_layer_0_0_0_1_fu_167->data_11_V_read(layer1_out_11_V_reg_732);
    grp_compute_layer_0_0_0_1_fu_167->data_12_V_read(layer1_out_12_V_reg_737);
    grp_compute_layer_0_0_0_1_fu_167->data_13_V_read(layer1_out_13_V_reg_742);
    grp_compute_layer_0_0_0_1_fu_167->data_14_V_read(layer1_out_14_V_reg_747);
    grp_compute_layer_0_0_0_1_fu_167->data_15_V_read(layer1_out_15_V_reg_752);
    grp_compute_layer_0_0_0_1_fu_167->data_16_V_read(layer1_out_16_V_reg_757);
    grp_compute_layer_0_0_0_1_fu_167->data_17_V_read(layer1_out_17_V_reg_762);
    grp_compute_layer_0_0_0_1_fu_167->data_18_V_read(layer1_out_18_V_reg_767);
    grp_compute_layer_0_0_0_1_fu_167->data_19_V_read(layer1_out_19_V_reg_772);
    grp_compute_layer_0_0_0_1_fu_167->data_20_V_read(layer1_out_20_V_reg_777);
    grp_compute_layer_0_0_0_1_fu_167->data_21_V_read(layer1_out_21_V_reg_782);
    grp_compute_layer_0_0_0_1_fu_167->data_22_V_read(layer1_out_22_V_reg_787);
    grp_compute_layer_0_0_0_1_fu_167->data_23_V_read(layer1_out_23_V_reg_792);
    grp_compute_layer_0_0_0_1_fu_167->data_24_V_read(layer1_out_24_V_reg_797);
    grp_compute_layer_0_0_0_1_fu_167->data_25_V_read(layer1_out_25_V_reg_802);
    grp_compute_layer_0_0_0_1_fu_167->data_26_V_read(layer1_out_26_V_reg_807);
    grp_compute_layer_0_0_0_1_fu_167->data_27_V_read(layer1_out_27_V_reg_812);
    grp_compute_layer_0_0_0_1_fu_167->data_28_V_read(layer1_out_28_V_reg_817);
    grp_compute_layer_0_0_0_1_fu_167->data_29_V_read(layer1_out_29_V_reg_822);
    grp_compute_layer_0_0_0_1_fu_167->data_30_V_read(layer1_out_30_V_reg_827);
    grp_compute_layer_0_0_0_1_fu_167->data_31_V_read(layer1_out_31_V_reg_832);
    grp_compute_layer_0_0_0_1_fu_167->ap_return(grp_compute_layer_0_0_0_1_fu_167_ap_return);
    call_ret2_relu_fu_203 = new relu("call_ret2_relu_fu_203");
    call_ret2_relu_fu_203->data_0_V_read(logits1_0_V_reg_517);
    call_ret2_relu_fu_203->data_1_V_read(logits1_1_V_reg_522);
    call_ret2_relu_fu_203->data_2_V_read(logits1_2_V_reg_527);
    call_ret2_relu_fu_203->data_3_V_read(logits1_3_V_reg_532);
    call_ret2_relu_fu_203->data_4_V_read(logits1_4_V_reg_537);
    call_ret2_relu_fu_203->data_5_V_read(logits1_5_V_reg_542);
    call_ret2_relu_fu_203->data_6_V_read(logits1_6_V_reg_547);
    call_ret2_relu_fu_203->data_7_V_read(logits1_7_V_reg_552);
    call_ret2_relu_fu_203->data_8_V_read(logits1_8_V_reg_557);
    call_ret2_relu_fu_203->data_9_V_read(logits1_9_V_reg_562);
    call_ret2_relu_fu_203->data_10_V_read(logits1_10_V_reg_567);
    call_ret2_relu_fu_203->data_11_V_read(logits1_11_V_reg_572);
    call_ret2_relu_fu_203->data_12_V_read(logits1_12_V_reg_577);
    call_ret2_relu_fu_203->data_13_V_read(logits1_13_V_reg_582);
    call_ret2_relu_fu_203->data_14_V_read(logits1_14_V_reg_587);
    call_ret2_relu_fu_203->data_15_V_read(logits1_15_V_reg_592);
    call_ret2_relu_fu_203->data_16_V_read(logits1_16_V_reg_597);
    call_ret2_relu_fu_203->data_17_V_read(logits1_17_V_reg_602);
    call_ret2_relu_fu_203->data_18_V_read(logits1_18_V_reg_607);
    call_ret2_relu_fu_203->data_19_V_read(logits1_19_V_reg_612);
    call_ret2_relu_fu_203->data_20_V_read(logits1_20_V_reg_617);
    call_ret2_relu_fu_203->data_21_V_read(logits1_21_V_reg_622);
    call_ret2_relu_fu_203->data_22_V_read(logits1_22_V_reg_627);
    call_ret2_relu_fu_203->data_23_V_read(logits1_23_V_reg_632);
    call_ret2_relu_fu_203->data_24_V_read(logits1_24_V_reg_637);
    call_ret2_relu_fu_203->data_25_V_read(logits1_25_V_reg_642);
    call_ret2_relu_fu_203->data_26_V_read(logits1_26_V_reg_647);
    call_ret2_relu_fu_203->data_27_V_read(logits1_27_V_reg_652);
    call_ret2_relu_fu_203->data_28_V_read(logits1_28_V_reg_657);
    call_ret2_relu_fu_203->data_29_V_read(logits1_29_V_reg_662);
    call_ret2_relu_fu_203->data_30_V_read(logits1_30_V_reg_667);
    call_ret2_relu_fu_203->data_31_V_read(logits1_31_V_reg_672);
    call_ret2_relu_fu_203->ap_return_0(call_ret2_relu_fu_203_ap_return_0);
    call_ret2_relu_fu_203->ap_return_1(call_ret2_relu_fu_203_ap_return_1);
    call_ret2_relu_fu_203->ap_return_2(call_ret2_relu_fu_203_ap_return_2);
    call_ret2_relu_fu_203->ap_return_3(call_ret2_relu_fu_203_ap_return_3);
    call_ret2_relu_fu_203->ap_return_4(call_ret2_relu_fu_203_ap_return_4);
    call_ret2_relu_fu_203->ap_return_5(call_ret2_relu_fu_203_ap_return_5);
    call_ret2_relu_fu_203->ap_return_6(call_ret2_relu_fu_203_ap_return_6);
    call_ret2_relu_fu_203->ap_return_7(call_ret2_relu_fu_203_ap_return_7);
    call_ret2_relu_fu_203->ap_return_8(call_ret2_relu_fu_203_ap_return_8);
    call_ret2_relu_fu_203->ap_return_9(call_ret2_relu_fu_203_ap_return_9);
    call_ret2_relu_fu_203->ap_return_10(call_ret2_relu_fu_203_ap_return_10);
    call_ret2_relu_fu_203->ap_return_11(call_ret2_relu_fu_203_ap_return_11);
    call_ret2_relu_fu_203->ap_return_12(call_ret2_relu_fu_203_ap_return_12);
    call_ret2_relu_fu_203->ap_return_13(call_ret2_relu_fu_203_ap_return_13);
    call_ret2_relu_fu_203->ap_return_14(call_ret2_relu_fu_203_ap_return_14);
    call_ret2_relu_fu_203->ap_return_15(call_ret2_relu_fu_203_ap_return_15);
    call_ret2_relu_fu_203->ap_return_16(call_ret2_relu_fu_203_ap_return_16);
    call_ret2_relu_fu_203->ap_return_17(call_ret2_relu_fu_203_ap_return_17);
    call_ret2_relu_fu_203->ap_return_18(call_ret2_relu_fu_203_ap_return_18);
    call_ret2_relu_fu_203->ap_return_19(call_ret2_relu_fu_203_ap_return_19);
    call_ret2_relu_fu_203->ap_return_20(call_ret2_relu_fu_203_ap_return_20);
    call_ret2_relu_fu_203->ap_return_21(call_ret2_relu_fu_203_ap_return_21);
    call_ret2_relu_fu_203->ap_return_22(call_ret2_relu_fu_203_ap_return_22);
    call_ret2_relu_fu_203->ap_return_23(call_ret2_relu_fu_203_ap_return_23);
    call_ret2_relu_fu_203->ap_return_24(call_ret2_relu_fu_203_ap_return_24);
    call_ret2_relu_fu_203->ap_return_25(call_ret2_relu_fu_203_ap_return_25);
    call_ret2_relu_fu_203->ap_return_26(call_ret2_relu_fu_203_ap_return_26);
    call_ret2_relu_fu_203->ap_return_27(call_ret2_relu_fu_203_ap_return_27);
    call_ret2_relu_fu_203->ap_return_28(call_ret2_relu_fu_203_ap_return_28);
    call_ret2_relu_fu_203->ap_return_29(call_ret2_relu_fu_203_ap_return_29);
    call_ret2_relu_fu_203->ap_return_30(call_ret2_relu_fu_203_ap_return_30);
    call_ret2_relu_fu_203->ap_return_31(call_ret2_relu_fu_203_ap_return_31);
    grp_sigmoid_fu_239 = new sigmoid("grp_sigmoid_fu_239");
    grp_sigmoid_fu_239->ap_clk(ap_clk);
    grp_sigmoid_fu_239->ap_rst(ap_rst);
    grp_sigmoid_fu_239->ap_start(grp_sigmoid_fu_239_ap_start);
    grp_sigmoid_fu_239->ap_done(grp_sigmoid_fu_239_ap_done);
    grp_sigmoid_fu_239->ap_idle(grp_sigmoid_fu_239_ap_idle);
    grp_sigmoid_fu_239->ap_ready(grp_sigmoid_fu_239_ap_ready);
    grp_sigmoid_fu_239->data_V_read(logits2_0_V_reg_837);
    grp_sigmoid_fu_239->ap_return(grp_sigmoid_fu_239_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0_preg );

    SC_METHOD(thread_ap_grp_compute_layer_0_0_0_s_fu_143_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_ap_pipeline_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );

    SC_METHOD(thread_const_size_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_const_size_in_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_const_size_out);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_const_size_out_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_grp_compute_layer_0_0_0_1_fu_167_ap_start);
    sensitive << ( ap_reg_grp_compute_layer_0_0_0_1_fu_167_ap_start );

    SC_METHOD(thread_grp_compute_layer_0_0_0_s_fu_143_ap_start);
    sensitive << ( ap_grp_compute_layer_0_0_0_s_fu_143_ap_start );

    SC_METHOD(thread_grp_sigmoid_fu_239_ap_start);
    sensitive << ( ap_reg_grp_sigmoid_fu_239_ap_start );

    SC_METHOD(thread_res_0_V);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( grp_sigmoid_fu_239_ap_return );

    SC_METHOD(thread_res_0_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_pipeline_idle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "01";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0_preg = SC_LOGIC_0;
    ap_reg_grp_compute_layer_0_0_0_1_fu_167_ap_start = SC_LOGIC_0;
    ap_reg_grp_sigmoid_fu_239_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "myproject_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_0_V, "(port)data_0_V");
    sc_trace(mVcdFile, data_1_V, "(port)data_1_V");
    sc_trace(mVcdFile, data_2_V, "(port)data_2_V");
    sc_trace(mVcdFile, data_3_V, "(port)data_3_V");
    sc_trace(mVcdFile, data_4_V, "(port)data_4_V");
    sc_trace(mVcdFile, data_5_V, "(port)data_5_V");
    sc_trace(mVcdFile, data_6_V, "(port)data_6_V");
    sc_trace(mVcdFile, data_7_V, "(port)data_7_V");
    sc_trace(mVcdFile, data_8_V, "(port)data_8_V");
    sc_trace(mVcdFile, data_9_V, "(port)data_9_V");
    sc_trace(mVcdFile, res_0_V, "(port)res_0_V");
    sc_trace(mVcdFile, res_0_V_ap_vld, "(port)res_0_V_ap_vld");
    sc_trace(mVcdFile, const_size_in, "(port)const_size_in");
    sc_trace(mVcdFile, const_size_in_ap_vld, "(port)const_size_in_ap_vld");
    sc_trace(mVcdFile, const_size_out, "(port)const_size_out");
    sc_trace(mVcdFile, const_size_out_ap_vld, "(port)const_size_out_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, logits1_0_V_reg_517, "logits1_0_V_reg_517");
    sc_trace(mVcdFile, logits1_1_V_reg_522, "logits1_1_V_reg_522");
    sc_trace(mVcdFile, logits1_2_V_reg_527, "logits1_2_V_reg_527");
    sc_trace(mVcdFile, logits1_3_V_reg_532, "logits1_3_V_reg_532");
    sc_trace(mVcdFile, logits1_4_V_reg_537, "logits1_4_V_reg_537");
    sc_trace(mVcdFile, logits1_5_V_reg_542, "logits1_5_V_reg_542");
    sc_trace(mVcdFile, logits1_6_V_reg_547, "logits1_6_V_reg_547");
    sc_trace(mVcdFile, logits1_7_V_reg_552, "logits1_7_V_reg_552");
    sc_trace(mVcdFile, logits1_8_V_reg_557, "logits1_8_V_reg_557");
    sc_trace(mVcdFile, logits1_9_V_reg_562, "logits1_9_V_reg_562");
    sc_trace(mVcdFile, logits1_10_V_reg_567, "logits1_10_V_reg_567");
    sc_trace(mVcdFile, logits1_11_V_reg_572, "logits1_11_V_reg_572");
    sc_trace(mVcdFile, logits1_12_V_reg_577, "logits1_12_V_reg_577");
    sc_trace(mVcdFile, logits1_13_V_reg_582, "logits1_13_V_reg_582");
    sc_trace(mVcdFile, logits1_14_V_reg_587, "logits1_14_V_reg_587");
    sc_trace(mVcdFile, logits1_15_V_reg_592, "logits1_15_V_reg_592");
    sc_trace(mVcdFile, logits1_16_V_reg_597, "logits1_16_V_reg_597");
    sc_trace(mVcdFile, logits1_17_V_reg_602, "logits1_17_V_reg_602");
    sc_trace(mVcdFile, logits1_18_V_reg_607, "logits1_18_V_reg_607");
    sc_trace(mVcdFile, logits1_19_V_reg_612, "logits1_19_V_reg_612");
    sc_trace(mVcdFile, logits1_20_V_reg_617, "logits1_20_V_reg_617");
    sc_trace(mVcdFile, logits1_21_V_reg_622, "logits1_21_V_reg_622");
    sc_trace(mVcdFile, logits1_22_V_reg_627, "logits1_22_V_reg_627");
    sc_trace(mVcdFile, logits1_23_V_reg_632, "logits1_23_V_reg_632");
    sc_trace(mVcdFile, logits1_24_V_reg_637, "logits1_24_V_reg_637");
    sc_trace(mVcdFile, logits1_25_V_reg_642, "logits1_25_V_reg_642");
    sc_trace(mVcdFile, logits1_26_V_reg_647, "logits1_26_V_reg_647");
    sc_trace(mVcdFile, logits1_27_V_reg_652, "logits1_27_V_reg_652");
    sc_trace(mVcdFile, logits1_28_V_reg_657, "logits1_28_V_reg_657");
    sc_trace(mVcdFile, logits1_29_V_reg_662, "logits1_29_V_reg_662");
    sc_trace(mVcdFile, logits1_30_V_reg_667, "logits1_30_V_reg_667");
    sc_trace(mVcdFile, logits1_31_V_reg_672, "logits1_31_V_reg_672");
    sc_trace(mVcdFile, layer1_out_0_V_reg_677, "layer1_out_0_V_reg_677");
    sc_trace(mVcdFile, layer1_out_1_V_reg_682, "layer1_out_1_V_reg_682");
    sc_trace(mVcdFile, layer1_out_2_V_reg_687, "layer1_out_2_V_reg_687");
    sc_trace(mVcdFile, layer1_out_3_V_reg_692, "layer1_out_3_V_reg_692");
    sc_trace(mVcdFile, layer1_out_4_V_reg_697, "layer1_out_4_V_reg_697");
    sc_trace(mVcdFile, layer1_out_5_V_reg_702, "layer1_out_5_V_reg_702");
    sc_trace(mVcdFile, layer1_out_6_V_reg_707, "layer1_out_6_V_reg_707");
    sc_trace(mVcdFile, layer1_out_7_V_reg_712, "layer1_out_7_V_reg_712");
    sc_trace(mVcdFile, layer1_out_8_V_reg_717, "layer1_out_8_V_reg_717");
    sc_trace(mVcdFile, layer1_out_9_V_reg_722, "layer1_out_9_V_reg_722");
    sc_trace(mVcdFile, layer1_out_10_V_reg_727, "layer1_out_10_V_reg_727");
    sc_trace(mVcdFile, layer1_out_11_V_reg_732, "layer1_out_11_V_reg_732");
    sc_trace(mVcdFile, layer1_out_12_V_reg_737, "layer1_out_12_V_reg_737");
    sc_trace(mVcdFile, layer1_out_13_V_reg_742, "layer1_out_13_V_reg_742");
    sc_trace(mVcdFile, layer1_out_14_V_reg_747, "layer1_out_14_V_reg_747");
    sc_trace(mVcdFile, layer1_out_15_V_reg_752, "layer1_out_15_V_reg_752");
    sc_trace(mVcdFile, layer1_out_16_V_reg_757, "layer1_out_16_V_reg_757");
    sc_trace(mVcdFile, layer1_out_17_V_reg_762, "layer1_out_17_V_reg_762");
    sc_trace(mVcdFile, layer1_out_18_V_reg_767, "layer1_out_18_V_reg_767");
    sc_trace(mVcdFile, layer1_out_19_V_reg_772, "layer1_out_19_V_reg_772");
    sc_trace(mVcdFile, layer1_out_20_V_reg_777, "layer1_out_20_V_reg_777");
    sc_trace(mVcdFile, layer1_out_21_V_reg_782, "layer1_out_21_V_reg_782");
    sc_trace(mVcdFile, layer1_out_22_V_reg_787, "layer1_out_22_V_reg_787");
    sc_trace(mVcdFile, layer1_out_23_V_reg_792, "layer1_out_23_V_reg_792");
    sc_trace(mVcdFile, layer1_out_24_V_reg_797, "layer1_out_24_V_reg_797");
    sc_trace(mVcdFile, layer1_out_25_V_reg_802, "layer1_out_25_V_reg_802");
    sc_trace(mVcdFile, layer1_out_26_V_reg_807, "layer1_out_26_V_reg_807");
    sc_trace(mVcdFile, layer1_out_27_V_reg_812, "layer1_out_27_V_reg_812");
    sc_trace(mVcdFile, layer1_out_28_V_reg_817, "layer1_out_28_V_reg_817");
    sc_trace(mVcdFile, layer1_out_29_V_reg_822, "layer1_out_29_V_reg_822");
    sc_trace(mVcdFile, layer1_out_30_V_reg_827, "layer1_out_30_V_reg_827");
    sc_trace(mVcdFile, layer1_out_31_V_reg_832, "layer1_out_31_V_reg_832");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_1_fu_167_ap_return, "grp_compute_layer_0_0_0_1_fu_167_ap_return");
    sc_trace(mVcdFile, logits2_0_V_reg_837, "logits2_0_V_reg_837");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0_preg, "ap_enable_reg_pp0_iter0_preg");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_start, "grp_compute_layer_0_0_0_s_fu_143_ap_start");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_done, "grp_compute_layer_0_0_0_s_fu_143_ap_done");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_idle, "grp_compute_layer_0_0_0_s_fu_143_ap_idle");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_ready, "grp_compute_layer_0_0_0_s_fu_143_ap_ready");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_0, "grp_compute_layer_0_0_0_s_fu_143_ap_return_0");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_1, "grp_compute_layer_0_0_0_s_fu_143_ap_return_1");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_2, "grp_compute_layer_0_0_0_s_fu_143_ap_return_2");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_3, "grp_compute_layer_0_0_0_s_fu_143_ap_return_3");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_4, "grp_compute_layer_0_0_0_s_fu_143_ap_return_4");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_5, "grp_compute_layer_0_0_0_s_fu_143_ap_return_5");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_6, "grp_compute_layer_0_0_0_s_fu_143_ap_return_6");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_7, "grp_compute_layer_0_0_0_s_fu_143_ap_return_7");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_8, "grp_compute_layer_0_0_0_s_fu_143_ap_return_8");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_9, "grp_compute_layer_0_0_0_s_fu_143_ap_return_9");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_10, "grp_compute_layer_0_0_0_s_fu_143_ap_return_10");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_11, "grp_compute_layer_0_0_0_s_fu_143_ap_return_11");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_12, "grp_compute_layer_0_0_0_s_fu_143_ap_return_12");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_13, "grp_compute_layer_0_0_0_s_fu_143_ap_return_13");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_14, "grp_compute_layer_0_0_0_s_fu_143_ap_return_14");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_15, "grp_compute_layer_0_0_0_s_fu_143_ap_return_15");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_16, "grp_compute_layer_0_0_0_s_fu_143_ap_return_16");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_17, "grp_compute_layer_0_0_0_s_fu_143_ap_return_17");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_18, "grp_compute_layer_0_0_0_s_fu_143_ap_return_18");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_19, "grp_compute_layer_0_0_0_s_fu_143_ap_return_19");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_20, "grp_compute_layer_0_0_0_s_fu_143_ap_return_20");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_21, "grp_compute_layer_0_0_0_s_fu_143_ap_return_21");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_22, "grp_compute_layer_0_0_0_s_fu_143_ap_return_22");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_23, "grp_compute_layer_0_0_0_s_fu_143_ap_return_23");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_24, "grp_compute_layer_0_0_0_s_fu_143_ap_return_24");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_25, "grp_compute_layer_0_0_0_s_fu_143_ap_return_25");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_26, "grp_compute_layer_0_0_0_s_fu_143_ap_return_26");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_27, "grp_compute_layer_0_0_0_s_fu_143_ap_return_27");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_28, "grp_compute_layer_0_0_0_s_fu_143_ap_return_28");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_29, "grp_compute_layer_0_0_0_s_fu_143_ap_return_29");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_30, "grp_compute_layer_0_0_0_s_fu_143_ap_return_30");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_s_fu_143_ap_return_31, "grp_compute_layer_0_0_0_s_fu_143_ap_return_31");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_1_fu_167_ap_start, "grp_compute_layer_0_0_0_1_fu_167_ap_start");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_1_fu_167_ap_done, "grp_compute_layer_0_0_0_1_fu_167_ap_done");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_1_fu_167_ap_idle, "grp_compute_layer_0_0_0_1_fu_167_ap_idle");
    sc_trace(mVcdFile, grp_compute_layer_0_0_0_1_fu_167_ap_ready, "grp_compute_layer_0_0_0_1_fu_167_ap_ready");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_0, "call_ret2_relu_fu_203_ap_return_0");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_1, "call_ret2_relu_fu_203_ap_return_1");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_2, "call_ret2_relu_fu_203_ap_return_2");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_3, "call_ret2_relu_fu_203_ap_return_3");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_4, "call_ret2_relu_fu_203_ap_return_4");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_5, "call_ret2_relu_fu_203_ap_return_5");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_6, "call_ret2_relu_fu_203_ap_return_6");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_7, "call_ret2_relu_fu_203_ap_return_7");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_8, "call_ret2_relu_fu_203_ap_return_8");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_9, "call_ret2_relu_fu_203_ap_return_9");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_10, "call_ret2_relu_fu_203_ap_return_10");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_11, "call_ret2_relu_fu_203_ap_return_11");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_12, "call_ret2_relu_fu_203_ap_return_12");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_13, "call_ret2_relu_fu_203_ap_return_13");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_14, "call_ret2_relu_fu_203_ap_return_14");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_15, "call_ret2_relu_fu_203_ap_return_15");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_16, "call_ret2_relu_fu_203_ap_return_16");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_17, "call_ret2_relu_fu_203_ap_return_17");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_18, "call_ret2_relu_fu_203_ap_return_18");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_19, "call_ret2_relu_fu_203_ap_return_19");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_20, "call_ret2_relu_fu_203_ap_return_20");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_21, "call_ret2_relu_fu_203_ap_return_21");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_22, "call_ret2_relu_fu_203_ap_return_22");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_23, "call_ret2_relu_fu_203_ap_return_23");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_24, "call_ret2_relu_fu_203_ap_return_24");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_25, "call_ret2_relu_fu_203_ap_return_25");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_26, "call_ret2_relu_fu_203_ap_return_26");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_27, "call_ret2_relu_fu_203_ap_return_27");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_28, "call_ret2_relu_fu_203_ap_return_28");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_29, "call_ret2_relu_fu_203_ap_return_29");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_30, "call_ret2_relu_fu_203_ap_return_30");
    sc_trace(mVcdFile, call_ret2_relu_fu_203_ap_return_31, "call_ret2_relu_fu_203_ap_return_31");
    sc_trace(mVcdFile, grp_sigmoid_fu_239_ap_start, "grp_sigmoid_fu_239_ap_start");
    sc_trace(mVcdFile, grp_sigmoid_fu_239_ap_done, "grp_sigmoid_fu_239_ap_done");
    sc_trace(mVcdFile, grp_sigmoid_fu_239_ap_idle, "grp_sigmoid_fu_239_ap_idle");
    sc_trace(mVcdFile, grp_sigmoid_fu_239_ap_ready, "grp_sigmoid_fu_239_ap_ready");
    sc_trace(mVcdFile, grp_sigmoid_fu_239_ap_return, "grp_sigmoid_fu_239_ap_return");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_grp_compute_layer_0_0_0_s_fu_143_ap_start, "ap_grp_compute_layer_0_0_0_s_fu_143_ap_start");
    sc_trace(mVcdFile, ap_reg_grp_compute_layer_0_0_0_1_fu_167_ap_start, "ap_reg_grp_compute_layer_0_0_0_1_fu_167_ap_start");
    sc_trace(mVcdFile, ap_reg_grp_sigmoid_fu_239_ap_start, "ap_reg_grp_sigmoid_fu_239_ap_start");
    sc_trace(mVcdFile, ap_pipeline_idle_pp0, "ap_pipeline_idle_pp0");
#endif

    }
    mHdltvinHandle.open("myproject.hdltvin.dat");
    mHdltvoutHandle.open("myproject.hdltvout.dat");
}

myproject::~myproject() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_compute_layer_0_0_0_s_fu_143;
    delete grp_compute_layer_0_0_0_1_fu_167;
    delete call_ret2_relu_fu_203;
    delete grp_sigmoid_fu_239;
}

void myproject::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0_preg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter0_preg = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
             !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()))) {
            ap_enable_reg_pp0_iter7 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_compute_layer_0_0_0_1_fu_167_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
            ap_reg_grp_compute_layer_0_0_0_1_fu_167_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_compute_layer_0_0_0_1_fu_167_ap_ready.read())) {
            ap_reg_grp_compute_layer_0_0_0_1_fu_167_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_sigmoid_fu_239_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
            ap_reg_grp_sigmoid_fu_239_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sigmoid_fu_239_ap_ready.read())) {
            ap_reg_grp_sigmoid_fu_239_ap_start = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        layer1_out_0_V_reg_677 = call_ret2_relu_fu_203_ap_return_0.read();
        layer1_out_10_V_reg_727 = call_ret2_relu_fu_203_ap_return_10.read();
        layer1_out_11_V_reg_732 = call_ret2_relu_fu_203_ap_return_11.read();
        layer1_out_12_V_reg_737 = call_ret2_relu_fu_203_ap_return_12.read();
        layer1_out_13_V_reg_742 = call_ret2_relu_fu_203_ap_return_13.read();
        layer1_out_14_V_reg_747 = call_ret2_relu_fu_203_ap_return_14.read();
        layer1_out_15_V_reg_752 = call_ret2_relu_fu_203_ap_return_15.read();
        layer1_out_16_V_reg_757 = call_ret2_relu_fu_203_ap_return_16.read();
        layer1_out_17_V_reg_762 = call_ret2_relu_fu_203_ap_return_17.read();
        layer1_out_18_V_reg_767 = call_ret2_relu_fu_203_ap_return_18.read();
        layer1_out_19_V_reg_772 = call_ret2_relu_fu_203_ap_return_19.read();
        layer1_out_1_V_reg_682 = call_ret2_relu_fu_203_ap_return_1.read();
        layer1_out_20_V_reg_777 = call_ret2_relu_fu_203_ap_return_20.read();
        layer1_out_21_V_reg_782 = call_ret2_relu_fu_203_ap_return_21.read();
        layer1_out_22_V_reg_787 = call_ret2_relu_fu_203_ap_return_22.read();
        layer1_out_23_V_reg_792 = call_ret2_relu_fu_203_ap_return_23.read();
        layer1_out_24_V_reg_797 = call_ret2_relu_fu_203_ap_return_24.read();
        layer1_out_25_V_reg_802 = call_ret2_relu_fu_203_ap_return_25.read();
        layer1_out_26_V_reg_807 = call_ret2_relu_fu_203_ap_return_26.read();
        layer1_out_27_V_reg_812 = call_ret2_relu_fu_203_ap_return_27.read();
        layer1_out_28_V_reg_817 = call_ret2_relu_fu_203_ap_return_28.read();
        layer1_out_29_V_reg_822 = call_ret2_relu_fu_203_ap_return_29.read();
        layer1_out_2_V_reg_687 = call_ret2_relu_fu_203_ap_return_2.read();
        layer1_out_30_V_reg_827 = call_ret2_relu_fu_203_ap_return_30.read();
        layer1_out_31_V_reg_832 = call_ret2_relu_fu_203_ap_return_31.read();
        layer1_out_3_V_reg_692 = call_ret2_relu_fu_203_ap_return_3.read();
        layer1_out_4_V_reg_697 = call_ret2_relu_fu_203_ap_return_4.read();
        layer1_out_5_V_reg_702 = call_ret2_relu_fu_203_ap_return_5.read();
        layer1_out_6_V_reg_707 = call_ret2_relu_fu_203_ap_return_6.read();
        layer1_out_7_V_reg_712 = call_ret2_relu_fu_203_ap_return_7.read();
        layer1_out_8_V_reg_717 = call_ret2_relu_fu_203_ap_return_8.read();
        layer1_out_9_V_reg_722 = call_ret2_relu_fu_203_ap_return_9.read();
        logits2_0_V_reg_837 = grp_compute_layer_0_0_0_1_fu_167_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        logits1_0_V_reg_517 = grp_compute_layer_0_0_0_s_fu_143_ap_return_0.read();
        logits1_10_V_reg_567 = grp_compute_layer_0_0_0_s_fu_143_ap_return_10.read();
        logits1_11_V_reg_572 = grp_compute_layer_0_0_0_s_fu_143_ap_return_11.read();
        logits1_12_V_reg_577 = grp_compute_layer_0_0_0_s_fu_143_ap_return_12.read();
        logits1_13_V_reg_582 = grp_compute_layer_0_0_0_s_fu_143_ap_return_13.read();
        logits1_14_V_reg_587 = grp_compute_layer_0_0_0_s_fu_143_ap_return_14.read();
        logits1_15_V_reg_592 = grp_compute_layer_0_0_0_s_fu_143_ap_return_15.read();
        logits1_16_V_reg_597 = grp_compute_layer_0_0_0_s_fu_143_ap_return_16.read();
        logits1_17_V_reg_602 = grp_compute_layer_0_0_0_s_fu_143_ap_return_17.read();
        logits1_18_V_reg_607 = grp_compute_layer_0_0_0_s_fu_143_ap_return_18.read();
        logits1_19_V_reg_612 = grp_compute_layer_0_0_0_s_fu_143_ap_return_19.read();
        logits1_1_V_reg_522 = grp_compute_layer_0_0_0_s_fu_143_ap_return_1.read();
        logits1_20_V_reg_617 = grp_compute_layer_0_0_0_s_fu_143_ap_return_20.read();
        logits1_21_V_reg_622 = grp_compute_layer_0_0_0_s_fu_143_ap_return_21.read();
        logits1_22_V_reg_627 = grp_compute_layer_0_0_0_s_fu_143_ap_return_22.read();
        logits1_23_V_reg_632 = grp_compute_layer_0_0_0_s_fu_143_ap_return_23.read();
        logits1_24_V_reg_637 = grp_compute_layer_0_0_0_s_fu_143_ap_return_24.read();
        logits1_25_V_reg_642 = grp_compute_layer_0_0_0_s_fu_143_ap_return_25.read();
        logits1_26_V_reg_647 = grp_compute_layer_0_0_0_s_fu_143_ap_return_26.read();
        logits1_27_V_reg_652 = grp_compute_layer_0_0_0_s_fu_143_ap_return_27.read();
        logits1_28_V_reg_657 = grp_compute_layer_0_0_0_s_fu_143_ap_return_28.read();
        logits1_29_V_reg_662 = grp_compute_layer_0_0_0_s_fu_143_ap_return_29.read();
        logits1_2_V_reg_527 = grp_compute_layer_0_0_0_s_fu_143_ap_return_2.read();
        logits1_30_V_reg_667 = grp_compute_layer_0_0_0_s_fu_143_ap_return_30.read();
        logits1_31_V_reg_672 = grp_compute_layer_0_0_0_s_fu_143_ap_return_31.read();
        logits1_3_V_reg_532 = grp_compute_layer_0_0_0_s_fu_143_ap_return_3.read();
        logits1_4_V_reg_537 = grp_compute_layer_0_0_0_s_fu_143_ap_return_4.read();
        logits1_5_V_reg_542 = grp_compute_layer_0_0_0_s_fu_143_ap_return_5.read();
        logits1_6_V_reg_547 = grp_compute_layer_0_0_0_s_fu_143_ap_return_6.read();
        logits1_7_V_reg_552 = grp_compute_layer_0_0_0_s_fu_143_ap_return_7.read();
        logits1_8_V_reg_557 = grp_compute_layer_0_0_0_s_fu_143_ap_return_8.read();
        logits1_9_V_reg_562 = grp_compute_layer_0_0_0_s_fu_143_ap_return_9.read();
    }
}

void myproject::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(0, 0);
}

void myproject::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read().range(1, 1);
}

void myproject::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void myproject::thread_ap_enable_reg_pp0_iter0() {
    if (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1)) {
        ap_enable_reg_pp0_iter0 = ap_start.read();
    } else {
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_preg.read();
    }
}

void myproject::thread_ap_grp_compute_layer_0_0_0_s_fu_143_ap_start() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        ap_grp_compute_layer_0_0_0_s_fu_143_ap_start = ap_const_logic_1;
    } else {
        ap_grp_compute_layer_0_0_0_s_fu_143_ap_start = ap_const_logic_0;
    }
}

void myproject::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void myproject::thread_ap_pipeline_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()))) {
        ap_pipeline_idle_pp0 = ap_const_logic_1;
    } else {
        ap_pipeline_idle_pp0 = ap_const_logic_0;
    }
}

void myproject::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void myproject::thread_const_size_in() {
    const_size_in = ap_const_lv16_A;
}

void myproject::thread_const_size_in_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()))) {
        const_size_in_ap_vld = ap_const_logic_1;
    } else {
        const_size_in_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_const_size_out() {
    const_size_out = ap_const_lv16_1;
}

void myproject::thread_const_size_out_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()))) {
        const_size_out_ap_vld = ap_const_logic_1;
    } else {
        const_size_out_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_grp_compute_layer_0_0_0_1_fu_167_ap_start() {
    grp_compute_layer_0_0_0_1_fu_167_ap_start = ap_reg_grp_compute_layer_0_0_0_1_fu_167_ap_start.read();
}

void myproject::thread_grp_compute_layer_0_0_0_s_fu_143_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_grp_compute_layer_0_0_0_s_fu_143_ap_start.read())) {
        grp_compute_layer_0_0_0_s_fu_143_ap_start = ap_grp_compute_layer_0_0_0_s_fu_143_ap_start.read();
    } else {
        grp_compute_layer_0_0_0_s_fu_143_ap_start = ap_const_logic_0;
    }
}

void myproject::thread_grp_sigmoid_fu_239_ap_start() {
    grp_sigmoid_fu_239_ap_start = ap_reg_grp_sigmoid_fu_239_ap_start.read();
}

void myproject::thread_res_0_V() {
    res_0_V = esl_zext<18,10>(grp_sigmoid_fu_239_ap_return.read());
}

void myproject::thread_res_0_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()))) {
        res_0_V_ap_vld = ap_const_logic_1;
    } else {
        res_0_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_pipeline_idle_pp0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_pipeline_idle_pp0.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

void myproject::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_0_V\" :  \"" << data_0_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_1_V\" :  \"" << data_1_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_2_V\" :  \"" << data_2_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_3_V\" :  \"" << data_3_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_4_V\" :  \"" << data_4_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_5_V\" :  \"" << data_5_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_6_V\" :  \"" << data_6_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_7_V\" :  \"" << data_7_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_8_V\" :  \"" << data_8_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_9_V\" :  \"" << data_9_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_0_V\" :  \"" << res_0_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_0_V_ap_vld\" :  \"" << res_0_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"const_size_in\" :  \"" << const_size_in.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"const_size_in_ap_vld\" :  \"" << const_size_in_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"const_size_out\" :  \"" << const_size_out.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"const_size_out_ap_vld\" :  \"" << const_size_out_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

