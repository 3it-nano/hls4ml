//
//    rfnoc-hls-neuralnet: Vivado HLS code for neural-net building blocks
//
//    Copyright (C) 2017 EJ Kreinar
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#include <fstream>
#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "firmware/parameters.h"
#include "firmware/myproject.h"
#include "nnet_helpers.h"


int main(int argc, char **argv)
{

  //hls-fpga-machine-learning insert data
  //input_t  data_str[N_LOOP][N_INPUTS] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
  /*
  input_t  data_str[N_LOOP][N_INPUTS] = {
    1.0600009e-03,-6.8587512e-02,-2.0117010e-01,1.0839588e-03,1.3537778e-01,1.1100000e+02,
    3.3607498e-02,-2.0087160e-02 ,2.3675982e-02,3.4705184e-02 ,7.6154582e-02,-2.1100000e+02,
    7.0006861e-03,3.8287553e-03,2.8604265e-02,6.9756852e-03,6.2983744e-02,1.1100000e+02,
    1.8600129e-02,-8.6854206e-04,-6.1373170e-03,1.8617840e-02 ,1.5765410e-02,1.1100000e+02,
    1.7187534e-02,2.3274384e-02,-3.6173448e-02,1.7514570e-02 ,2.2627225e-02,1.1100000e+02,
    1.8899056e-01,0.0000000e+00,0.0000000e+00,1.8094023e-01,9.2007287e-02,2.1100000e+02,
    2.0624034e-02,4.9127564e-03,6.4651570e-03,2.0763522e-02,2.4815124e-02,1.1100000e+02,
    6.5550255e-04,-1.5292037e-01,-8.4951408e-02,7.0622785e-04 ,1.7671409e-01,1.1100000e+02,
    9.3941629e-04,-7.9185440e-04,1.7659241e-02,9.5068634e-04 ,5.3698171e-02,1.1100000e+02,
    1.6508028e-02,-4.1163355e-02,-2.1614847e-01,1.4760545e-02 ,2.1133940e-01,1.3000000e+02,
    3.4978759e-04,-2.0317887e-01,-2.1951635e-01,4.1660582e-04 ,2.5804400e-01,-2.1100000e+02,
    8.6475192e-03,3.0040648e-02,-1.8707146e-01,8.4087057e-03 ,1.4026523e-01,-2.1100000e+02,
    5.6645658e-04,3.2409656e-01 ,8.2574002e-02,5.3250266e-04 ,3.2752618e-01,-2.1100000e+02,
    6.8699517e-03,1.1947598e-02,-2.1263190e-01,7.3855175e-03 ,1.5270482e-01,2.2120000e+03,
    1.2288776e-03,4.7313195e-02,-6.9259042e-03,1.2599734e-03 ,1.0468890e-01,-2.1100000e+02,
    1.9014455e-02,6.8683490e-02,-1.6912109e-01,2.0151505e-02 ,1.1600402e-01,1.1100000e+02,
    1.4801424e-02,2.8085846e-05,-2.3549875e-02,1.4507738e-02 ,3.8319573e-02,-2.1100000e+02,
    4.1040457e-03,3.3761233e-02,-2.5928417e-02,4.0859133e-03 ,3.1111661e-02,1.1100000e+02,
    1.3956445e-02,-1.8640677e-03,-2.2425114e-01,1.3963638e-02 ,2.0034862e-01,1.3000000e+02,
    1.2546846e-02,7.2891125e-03,-3.2613629e-03,1.2670331e-02 ,6.3377634e-02,-2.1100000e+02};
  */

  input_t  data_str[N_LOOP][N_INPUTS] = {
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855,
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855,
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855,
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855,
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855,
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855,
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855,
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855,
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855,
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855,
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855,
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855,
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855,
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855,
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855,
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855,
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855,
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855,
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855,
    -0.0089575, -0.00054066,  0.00970292, -0.00895205, -0.01843314, -0.00083855
  };

  result_t res_str[N_OUTPUTS] = {0};
  unsigned short size_in, size_out;
  myproject(data_str, res_str, size_in, size_out);
    
  std::cout << "result : ";
  for(int i=0; i<N_OUTPUTS; i++){
    std::cout <<  res_str[i] << " ";
  }
  std::cout << std::endl;
  
  return 0;
}
